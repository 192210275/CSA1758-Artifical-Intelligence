from collections import deque
def water_jug(x, y, z):
    if z > max(x, y) or z % gcd(x, y) != 0:
        return "No solution"
    visited = set()
    queue = deque([(0, 0)])
    steps = []
    while queue:
        a, b = queue.popleft()
        if (a, b) in visited:
            continue
        visited.add((a, b))
        steps.append((a, b))
        if a == z or b == z:
            return steps
        queue.append((x, b))
        queue.append((a, y))
        queue.append((0, b))
        queue.append((a, 0))
        queue.append((a - min(a, y - b), b + min(a, y - b)))
        queue.append((a + min(b, x - a), b - min(b, x - a)))
    return "No solution"
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a
x, y, z = 4, 3, 2
result = water_jug(x, y, z)
if result == "No solution":
    print(result)
else:
    print("Steps to measure", z, "liters:")
    for step in result:
        print("Jug X:", step[0], "Jug Y:", step[1])
